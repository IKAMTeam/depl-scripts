Instructions apply to the new instances of Amazon Linux 2 AMI 

We use AWS Linux 2 Extras Library to install some components. 

I. GENERAL WEB SERVER CONFIGURATION

1. Set time zone: 
sudo ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime 

2. Install Tomcat (Tomcat in AWS extras comes with Corretto 11 dependency, which is AWS build of Java 11 compatible with Java SE):
sudo amazon-linux-extras install tomcat8.5 

Tomcat installed in /usr/share/tomcat directory 

3. enable service to start at boot time: 
sudo systemctl enable tomcat 

4. Install OneVizion deployment and upgrade scripts from GitHub
sudo yum install git 
git clone https://github.com/IKAMTeam/depl-scripts 
cd depl-scripts 
chmod +x *.sh 
cp credentials.conf.template credentials.conf 

5. Open credentials.conf and set variables: 
RELEASES_REPO_URL="https://ci.onevizion.com/archiva/repository/releases" 
SNAPSHOT_REPO_URL= "https://ci.onevizion.com/archiva/repository/snapshots" 
REPOSITORY_UN= "username for ci.onevizion.com access" 
REPOSITORY_PWD="password for ci.onevizion.com access" 
TOMCAT_SERVICE="tomcat"
TOMCAT_UN="tomcat"
TOMCAT_GROUP="tomcat"

6. Test database connection: 
java -jar setup/test-jdbc.jar <username> <password> <host>:<port>:<sid> 

7. Setup Tomcat with OneVizion context configuration template, corrected logging settings to use with own deployment scripts, page for health check by Load Balancer.
sudo cp -rf setup/tomcat/conf/* /usr/share/tomcat/conf
sudo cp -rf setup/tomcat/webapps/* /usr/share/tomcat/webapps 
sudo rm -f /usr/share/tomcat/conf/tomcat-users.xml 

8. Setup timeout for Tomcat shutdown process before it will be killed: 
sudo sed -i 's/# SHUTDOWN_WAIT="30"/SHUTDOWN_WAIT="30"/g' /usr/share/tomcat/conf/tomcat.conf 

9. Configure Auto-Restart for Tomcat if it will be crashed:
sudo sed -i 's/\[Service\]/[Service]\nRestart=on-failure\nRestartSec=5s/g' /usr/lib/systemd/system/tomcat.service
sudo systemctl daemon-reload

10. Configure Tomcat filesystem permissions:
depl-scripts $ sudo ./config-tomcat-security.sh

NOTE:
- We change tomcat directory owner to root:tomcat (recursive)
- Revoke all public permissions and revoke group write.
- Give group write permissions for logs, temp, work, sitename.onevizion.com/css and sitename.onevizion.com/img webapp directories to allow web server write to it.
- Give setgid to all directories to allow group "tomcat" to read newly created files.
- Set default permissions through ACL: u:rwx, g:r-x, o:---; For logs, temp, work directories set special group permissions - g:rwx

Reference: https://tomcat.apache.org/tomcat-8.5-doc/security-howto.html#Non-Tomcat_settings


II. INSTALLATION OF ONEVIZION WEB APP

11. Install website:
depl-scripts $ sudo ./install-web.sh <preferred hostname> <version> <owner_schema_username> <owner_schema_password>
    <user_schema_password> <pkg_schema_password> <connect_identifier> [enterprise_edition] [aes_password]

Where:
<owner_schema_username> - Username for OWNER schema
<owner_schema_password> - Password for OWNER schema
<user_schema_password> - Password for _USER schema
<pkg_schema_password> - Password for _PKG schema
<connect_identifier> - Oracle HOST:PORT:SID or HOST:PORT/SERVICE_NAME
[enterprise_edition] - Optional. Is Enterprise Edition? (true or false). Defaults to true
[aes_password] - Optional. Password for AES Encryption. Leave blank if the "Sensitive data encryption" feature is not enabled

(Tomcat will start automatically)


III. ENABLE SSL CONNECTION TO THE ORACLE DB (OPTIONAL)

12. Make sure SSL is enabled in AWS RDS option group with following settings: port 2484, SSL_VERSION= 1.2, CIPHER_SUITE=SSL_RSA_WITH_AES_256_GCM_SHA384

13. Use instructions from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.Options.SSL.html to generate Java keystore file with AWS certificates:
download certificate from https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem
openssl x509 -outform der -in rds-ca-2019-root.pem -out rds-ca-2019-root.der

14. Import AWS Certificate into Java trust store (located in $JAVA_HOME/jre/lib/security/cacerts, also Tomcat prints out JAVA_HOME into logs on startup):
sudo keytool -import -trustcacerts -keystore cacerts -storepass changeit -alias Root -file rds-ca-2019-root.der

15. Modify "web.dbSid" parameter in ROOT.xml to:
'(DESCRIPTION= (ADDRESS=(PROTOCOL=TCPS)(PORT=2484)(HOST=[placeholder for Oracle host]))(CONNECT_DATA=(SID=[placeholder for Oracle SID]))(SECURITY=(SSL_SERVER_CERT_DN="C=US,ST=Washington,L=Seattle,O=Amazon.com,OU=RDS,CN=%s")))'

Replace [placeholder for Oracle SID] and [placeholder for Oracle host] with correct values

16. Restart Tomcat
sudo systemctl restart tomcat
